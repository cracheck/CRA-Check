using CRA_Check.Models;
using GrypeCLIWrapper;
using System.IO;

namespace CRA_Check.Tools.VulnerabilityScanners
{
    /// <summary>
    /// Grype vulnerabilities scanner
    /// </summary>
    public class GrypeScanner : IVulnerabilityScanner
    {
        /// <summary>
        /// Temp file for the scan result
        /// </summary>
        private readonly string SBOM_TEMP_FILENAME = "sbom.json";
        
        /// <summary>
        /// Grype wrapper
        /// </summary>
        private GrypeCLIWrapper.GrypeCLIWrapper _grypeCLIWrapper;

        /// <summary>
        /// Constructor. Configure the Grype wrapper
        /// </summary>
        /// <param name="grypePath">Path to Grype.exe</param>
        public GrypeScanner(string grypePath)
        {
            _grypeCLIWrapper = new GrypeCLIWrapper.GrypeCLIWrapper(grypePath);
        }

        /// <summary>
        /// Update the vulerabilities database
        /// </summary>
        /// <returns>Return the status</returns>
        public Task<string> UpdateDatabase()
        {
            return _grypeCLIWrapper.UpdateDatabase();
        }

        /// <summary>
        /// Scan an SBOM for vulnerabilities
        /// </summary>
        /// <param name="sourcePath">SBOM filename</param>
        /// <returns>Scan result</returns>
        public Task<string> ScanVulnerability(string sourcePath)
        {
            return  _grypeCLIWrapper.ScanVulnerability(sourcePath, OutputFormatType.CYCLONEDX_JSON);
        }

        /// <summary>
        /// Scan a Release for vulnerabilities
        /// </summary>
        /// <param name="release">Release to be scanned</param>
        /// <returns>Scan result</returns
        public Task<string> ScanVulnerability(Release release)
        {
            string sbomFilename = Path.Combine(Path.GetTempPath(), SBOM_TEMP_FILENAME);

            File.WriteAllText(sbomFilename, release.Sbom);

            return ScanVulnerability(sbomFilename);
        }

        /// <summary>
        /// Return the Version of the scanner
        /// </summary>
        /// <returns>Version</returns>
        public Task<Version> GetVersion()
        {
            return _grypeCLIWrapper.GetVersion();
        }
    }
}
