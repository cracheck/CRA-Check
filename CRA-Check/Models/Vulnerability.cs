using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Runtime.CompilerServices;

namespace CRA_Check.Models
{
    // TODO adapt
    public class Vulnerability : INotifyPropertyChanged
    {
        public int Id { get; set; }
        public Release Release { get; set; }
        public int ReleaseId { get; set; }

        private string _vulnerabilityId;
        public string VulnerabilityId
        {
            get { return _vulnerabilityId; }
            set
            {
                _vulnerabilityId = value;
                OnPropertyChanged();
            }
        }

        private string _dataSource;
        public string DataSource
        {
            get { return _dataSource; }
            set
            {
                _dataSource = value;
                OnPropertyChanged();
            }
        }

        private SeverityLevel _severity;
        public SeverityLevel Severity
        {
            get { return _severity; }
            set
            {
                _severity = value;
                OnPropertyChanged();
            }
        }

        private string _description;
        public string Description
        {
            get { return _description; }
            set
            {
                _description = value;
                OnPropertyChanged();
            }
        }

        private string _artifactName;
        public string ArtifactName
        {
            get { return _artifactName; }
            set
            {
                _artifactName = value;
                OnPropertyChanged();
            }
        }

        private string _artifactVersion;
        public string ArtifactVersion
        {
            get { return _artifactVersion; }
            set
            {
                _artifactVersion = value;
                OnPropertyChanged();
            }
        }

        private ObservableCollection<Cvss> _cvssList;
        public ObservableCollection<Cvss> CvssList
        {
            get { return _cvssList; }
            set
            {
                _cvssList = value;
                OnPropertyChanged();
            }
        }

        public Vulnerability()
        {
            CvssList = new ObservableCollection<Cvss>();
        }

        public event PropertyChangedEventHandler PropertyChanged;
        protected virtual void OnPropertyChanged([CallerMemberName] string propertyName = null)
        {
            PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}
