using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Runtime.CompilerServices;

namespace CRA_Check.Models
{
    // TODO adapt
    public class Vulnerability : INotifyPropertyChanged
    {
        public int Id { get; set; }
        public Release Release { get; set; }
        public int ReleaseId { get; set; }

        private string _vulnerabilityId;
        public string VulnerabilityId
        {
            get { return _vulnerabilityId; }
            set
            {
                _vulnerabilityId = value;
                OnPropertyChanged();
            }
        }

        private string _sourceName;
        public string SourceName
        {
            get { return _sourceName; }
            set
            {
                _sourceName = value;
                OnPropertyChanged();
            }
        }

        private string _sourceUrl;
        public string SourceUrl
        {
            get { return _sourceUrl; }
            set
            {
                _sourceUrl = value;
                OnPropertyChanged();
            }
        }

        private string _description;
        public string Description
        {
            get { return _description; }
            set
            {
                _description = value;
                OnPropertyChanged();
            }
        }

        private ObservableCollection<Rating> _ratings;
        public ObservableCollection<Rating> Ratings
        {
            get { return _ratings; }
            set
            {
                _ratings = value;
                OnPropertyChanged();
            }
        }

        public Vulnerability()
        {
            Ratings = new ObservableCollection<Rating>();
        }

        public event PropertyChangedEventHandler PropertyChanged;
        protected virtual void OnPropertyChanged([CallerMemberName] string propertyName = null)
        {
            PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}
